# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# -- ConfigMaps to create
configMaps: {}
  # lnameHere:
  #   data:
  #     config.toml: |-
  #      content
# -- Secrets to create
secrets: {}
  # anotherlname:
  #   data:
  #     shhh.json: |
  #       plaintext content

# -- Applications to deploy
apps:
  # -- Example app configuration
  example-app:
    # -- Enable/disable this app deployment
    enabled: false

    # -- Kubernetes workload type - can be Deployment or StatefulSet
    kind: StatefulSet
    
    # -- Number of pod replicas to run
    replicaCount: 1

    # -- Pod/deployment annotations
    annotations:
      app.kubernetes.io/component: api
      prometheus.io/scrape: "true"

    # -- Image pull secrets for accessing private registries
    imagePullSecrets:
      - name: regcred

    # -- Volume claim templates (only used when kind=StatefulSet)
    volumeClaims:
      # -- Name of the volume claim
      data:
        # -- Access modes for the volume
        accessModes: [ReadWriteOnce]
        # -- Storage resource requests
        resources:
          requests:
            storage: 1Gi

    # -- Init container operations configuration
    initOperations:
      # -- Enable init containers
      enabled: true
      # -- Mount path for sharing data between init containers
      passthroughMountPath: /init-passthrough
      
      # -- Init container steps to run
      steps:
        # -- Example init step
        config-prep:
          # -- Enable this init step
          enabled: true
          # -- Container image for init step
          image: busybox
          # -- Command to run in init container
          command:
            - sh
            - -c
            - envsubst < /config/template.yaml > /init-passthrough/config.yaml

          # -- Environment variables
          env:
            API_PORT: "8080"
            LOG_LEVEL: "debug"
          
          # -- Raw environment variable declarations
          envRaw:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

          # -- Environment variables from secrets
          secretEnv:
            DB_PASSWORD:
              lname: db-creds
              key: password
            API_KEY:
              lname: api-secrets
              key: key

          # -- ConfigMap volume mounts
          configMapMounts:
            /config:
              lname: app-config
              
          # -- Secret volume mounts  
          secretMounts:
            /secrets:
              lname: app-secrets

    # -- Container configurations
    containers:
      # -- Main application container
      app:
        # -- Container image configuration
        image:
          repository: company/app
          tag: v1.2.3
          pullPolicy: IfNotPresent

        # -- Container ports to expose
        ports:
          http: 8080
          metrics: 9090

        # -- Container command
        command:
          - /bin/app
          - serve

        # -- Container arguments
        args:
          - --config
          - /init-passthrough/config.yaml

        # -- Environment variables
        env:
          NODE_ENV: production
          LOG_FORMAT: json
          API_PORT: "8080"

        # -- Raw environment variable declarations
        envRaw:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP

        # -- Environment variables from secrets
        secretEnv:
          DB_PASSWORD:
            lname: db-creds
            key: password
          API_KEY:
            lname: api-secrets
            key: key

        # -- Secret volume mounts
        secretMounts:
          /app/secrets:
            lname: app-secrets
          /app/certs:
            lname: tls-certs

        # -- ConfigMap volume mounts
        configMapMounts:
          /app/config:
            lname: app-config

        # -- Persistent volume claim mounts (only for StatefulSets)
        volumeClaimMounts:
          /app/data:
            lname: data

        # -- Container security context
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          readOnlyRootFilesystem: true

        # -- Container resource requests/limits
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 512Mi

        # -- Pre-install pod configuration
        preInstallPod:
          enabled: true
          command: "python /app/db-migrate.py"

        # -- Pre-upgrade pod configuration  
        preUpgradePod:
          enabled: true
          command: "python /app/db-backup.py"

    # -- Default service configuration
    service:
      enabled: true
      annotations:
        prometheus.io/scrape: "true"
      type: ClusterIP
      ports:
        http: 8080
        metrics: 9090

    # -- Additional named services
    services:
      metrics:
        enabled: true
        type: ClusterIP
        ports:
          prometheus: 9090

    # -- Service account configuration
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::123456789:role/app-role"
      name: "app-sa"
      role:
        rules:
          - apiGroups: [""]
            resources: ["pods", "services"]
            verbs: ["get", "list", "watch"]

    # -- Pod security context
    podSecurityContext:
      fsGroup: 2000

    # -- Node selector
    nodeSelector:
      kubernetes.io/arch: amd64
      kubernetes.io/os: linux

    # -- Pod tolerations
    tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"

    # -- Pod affinity rules
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/e2e-az-name
                  operator: In
                  values:
                    - e2e-az1
                    - e2e-az2

    # -- Additional pod spec fields
    injectPodYaml:
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst

# -- Ingress configuration
ingress:
  # Example ingress configuration
  example-ingress:  # ingress name
    enabled: false
    
    # -- Ingress class name (required for k8s >= 1.18)
    ingressClassName: nginx
    
    # -- Ingress annotations
    annotations: {}
      # kubernetes.io/tls-acme: "true"
    
    # -- TLS configuration
    tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
    
    # -- Ingress rules
    rules: []
    # - host: chart-example.local
    #   paths:
    #   - path: /
    #     pathType: Prefix    # One of: Prefix, Exact, ImplementationSpecific
    #     targetAppName: app1     # Name of the app from apps section
    #     serviceName: ""     # Optional - name of the named service, empty for default service
    #     servicePortName: 80     # Port number from the service

