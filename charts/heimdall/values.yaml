# Default values for heimdall.
# This is a YAML-formatted file.

nameOverride: ""
fullnameOverride: ""

# -- Specifies the heimdall network instance, one of: `mainnet`, `testnet`
network: mainnet

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

prometheus:
  serviceMonitors:
    # -- Enable monitoring by creating `PodMonitor` CRDs ([prometheus-operator](https://github.com/prometheus-operator/prometheus-operator))
    enabled: false
    labels: {}
    interval:
    scrapeTimeout:
    relabelings: []

grafana:
  # -- Enable creation of Grafana dashboards. [Grafana chart](https://github.com/grafana/helm-charts/tree/main/charts/grafana#grafana-helm-chart) must be configured to search this namespace, see `sidecar.dashboards.searchNamespace`
  dashboards: false
  # -- Must match `sidecar.dashboards.label` value for the [Grafana chart](https://github.com/grafana/helm-charts/tree/main/charts/grafana#grafana-helm-chart)
  dashboardsConfigMapLabel: grafana_dashboard
  # -- Must match `sidecar.dashboards.labelValue` value for the [Grafana chart](https://github.com/grafana/helm-charts/tree/main/charts/grafana#grafana-helm-chart)
  dashboardsConfigMapLabelValue: ""


heimdall:
  # -- Enable creation of `StatefulSet` for Heimdall
  enabled: true
  image:
    # -- Image for Heimdall
    repository: maticnetwork/heimdall
    pullPolicy: IfNotPresent
    tag: "v0.3.0" # Don't forget to update appVersion in Chart.yaml

  # -- Options for Heimdall rest-server sidecar
  restServer:
    extraArgs: []
    resources: {}

  # -- Additional CLI arguments to pass to Heimdall
  extraArgs: []

  fromSnapshot:
    # -- Enable initialising Heimdall from a remote Snapshot
    enabled: false
    # -- URL to snapshot to download and extract, see [here](https://snapshots.matic.today)
    snapshotUrl:

  # -- Environment variables to set in key/value format
  env:
    BOOTNODES: ""  
    ETH1_RPC_URL: "" # optional

  # -- Annotations for the `Pod`
  podAnnotations: {}

  # -- [PersistentVolumeClaimSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#persistentvolumeclaimspec-v1-core) for heimdall storage
  volumeClaimSpec:
    accessModes: ["ReadWriteOnce"]
    # -- The storage class to use when provisioning a persistent volume for heimdall
    storageClassName: 
    resources:
      requests:
        # -- The amount of disk space to provision for Heimdall
        storage: 256Gi

  # -- Pod-wide security context
  podSecurityContext:
    runAsNonRoot: false
    # runAsUser: 101337
    # runAsGroup: 101337
    # fsGroup: 101337

  service:
    type: ClusterIP
    ports:
      http-trpc: 26657
      http-rest: 1317

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi
    # requests:
    #   cpu: 500m
    #   memory: 4Gi
    #   ephemeral-storage: 100Mi

  nodeSelector: {}

  tolerations: []

  affinityPresets:
    # -- Configure anti-affinity rules to prevent multiple Heimdall instances on the same host
    antiAffinityByHostname: true

  affinity: {}
  # -- Enable creation of `StatefulSet` for Bor
  enabled: false
  image:
    # -- Image for Bor
    repository: maticnetwork/bor
    pullPolicy: IfNotPresent
    tag: "v0.2.16-beta2" # Don't forget to update appVersion in Chart.yaml

  initImage:
    repository: apteno/alpine-jq
    pullPolicy: IfNotPresent
    tag: "2022-05-01"

  # -- When terminating, number of seconds to wait before force-killing containers in Pod
  terminationGracePeriodSeconds: 300

  # -- Additional CLI arguments to pass to Bor
  extraArgs:
    - "--http"
    # - "----bor-mainnet" # https://github.com/maticnetwork/bor/issues/190#issuecomment-964419670
    - "--http.addr=0.0.0.0"
    - "--http.vhosts=*"
    - "--http.corsdomain=*"
    - "--http.port=8545"
    - "--http.api=eth,net,web3,txpool"
    - "--syncmode=full" 
    - "--networkid=137"
    - "--miner.gasprice=30000000000" # default: 100000000
    - "--miner.gaslimit=20000000" # default: 8000000
    - "--miner.gastarget=20000000"
    - "--txpool.nolocals"
    - "--txpool.accountslots=16"
    - "--txpool.globalslots=32768"
    - "--txpool.accountqueue=16"
    - "--txpool.globalqueue=32768"
    - "--txpool.pricelimit=30000000000"
    - "--txpool.lifetime=1h30m0s"
    - "--maxpeers=200"
    - "--metrics"
    - "--pprof"
    - "--pprof.port=7071"
    - "--pprof.addr=0.0.0.0"
    - "--gcmode=archive"
    - "--snapshot=false"
  

  fromSnapshot:
    # -- Enable initialising Bor from a remote Snapshot
    enabled: false
    # -- URL to snapshot to download and extract, see [here](https://snapshots.matic.today)
    snapshotUrl:

  # -- Environment variables to set in key/value format
  env: {}

  # -- [PersistentVolumeClaimSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#persistentvolumeclaimspec-v1-core) for heimdall storage
  volumeClaimSpec:
    accessModes: ["ReadWriteOnce"]
    # -- The storage class to use when provisioning a persistent volume for heimdall
    storageClassName: 
    resources:
      requests:
        # -- The amount of disk space to provision for heimdall
        storage: 3Ti # 12Ti for archival mode

  podSecurityContext:
    runAsNonRoot: false
    # runAsUser: 101337
    # runAsGroup: 101337
    # fsGroup: 101337

  service:
    type: ClusterIP
    ports:
      # Valid keys are names of ports that are exposed by the Pod that (see templates/stateful-node/statefulset.yaml)
      # -- Service Port to expose JSON-RPC interface on
      http-jsonrpc: 8545
  

  affinityPresets:
    # -- Configure anti-affinity rules to prevent multiple heimdall instances on the same host
    antiAffinityByHostname: true

  affinity: {}