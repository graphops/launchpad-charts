{{- $values := $.Values.statefulNode }}
{{- $componentName := "stateful-node" }}
{{- $componentLabel := include "erigon.componentLabelFor" $componentName }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "erigon.fullname" . }}-{{ $componentName }}-headless
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
    {{- $componentLabel | nindent 4 }}
spec:
  clusterIP: None # Headless service
  publishNotReadyAddresses: {{ default false $values.service.publishNotReadyAddresses.headless }}
  ports:
  {{- range $portName, $portNumber := $values.service.ports }}
    - port: {{ $portNumber }} # the port we expose on the Service, user configurable
      targetPort: {{ $portName }} # the name of the port on the container that we are routing to
      protocol: TCP
      name: {{ $portName }}
  {{- end }}
  selector:
    {{- include "erigon.selectorLabels" . | nindent 4 }}
    {{- $componentLabel | nindent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  {{- if $values.service.topologyAwareRouting.enabled }}
  annotations:
    {{- if semverCompare ">= 1.27-0" .Capabilities.KubeVersion.GitVersion }}
    service.kubernetes.io/topology-mode: "auto"
    {{- else }}
    service.kubernetes.io/topology-aware-hints: "auto"
    {{- end }}
  {{- end }}
  name: {{ include "erigon.fullname" . }}-{{ $componentName }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
    {{- $componentLabel | nindent 4 }}
    serviceMonitorTarget: "true"  # Additional label to prevent matching the headless service above
spec:
  type: {{ $values.service.type }}
  ports:
  {{- range $portName, $portNumber := $values.service.ports }}
    - port: {{ $portNumber }} # the port we expose on the Service, user configurable
      targetPort: {{ $portName }} # the name of the port on the container that we are routing to
      protocol: TCP
      name: {{ $portName }}
  {{- end }}
  selector:
    {{- include "erigon.selectorLabels" . | nindent 4 }}
    {{- $componentLabel | nindent 4 }}
{{/* P2P Service when NodePort is enabled (legacy or new config) */}}
{{- if (include "erigon.p2p.isNodePort" $values | trim | eq "true") }}
{{- $port := (include "erigon.p2p.nodePortBase" $values) | int }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "erigon.fullname" . }}-{{ $componentName }}-p2p-0
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
    {{- $componentLabel | nindent 4 }}
    pod: {{ include "erigon.fullname" . }}-{{ $componentName }}-0
    type: p2p # this label is used by the initContainer to select this service
    {{- with $values.p2p.service.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  type: NodePort
  externalTrafficPolicy: Local
  publishNotReadyAddresses: {{ if (and $values.p2p $values.p2p.service) }}{{ default false $values.p2p.service.publishNotReadyAddresses }}{{ else }}{{ default false $values.service.publishNotReadyAddresses.p2p }}{{ end }}
  {{- if and $values.p2p $values.p2p.service $values.p2p.service.externalIPs }}
  externalIPs:
    {{- toYaml $values.p2p.service.externalIPs | nindent 2 }}
  {{- end }}
  ports:
    - name: tcp-p2p-68
      port: {{ include "erigon.p2pPort" $values }}
      protocol: TCP
      targetPort: tcp-p2p-68
      nodePort: {{ $port }}
    - name: udp-p2p-68
      port: {{ include "erigon.p2pPort" $values }}
      protocol: UDP
      targetPort: udp-p2p-68
      nodePort: {{ $port }}
    - name: tcp-p2p-67
      port: {{ add (include "erigon.p2pPort" $values) 1 }}
      protocol: TCP
      targetPort: tcp-p2p-67
      nodePort: {{ add $port 1 }}
    - name: udp-p2p-67
      port: {{ add (include "erigon.p2pPort" $values) 1 }}
      protocol: UDP
      targetPort: udp-p2p-67
      nodePort: {{ add $port 1 }}
  selector:
    {{- include "erigon.selectorLabels" . | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "erigon.fullname" $ }}-{{ $componentName }}-0"
{{- end }}

{{/* P2P Service when LoadBalancer is requested */}}
{{- if (include "erigon.p2p.isLoadBalancer" $values | trim | eq "true") }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "erigon.fullname" . }}-{{ $componentName }}-p2p
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
    {{- $componentLabel | nindent 4 }}
    {{- with $values.p2p.service.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with $values.p2p.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: LoadBalancer
  {{- if (and $values.p2p $values.p2p.service $values.p2p.service.externalTrafficPolicy) }}
  externalTrafficPolicy: {{ $values.p2p.service.externalTrafficPolicy }}
  {{- end }}
  {{- if and $values.p2p $values.p2p.service $values.p2p.service.loadBalancerIP }}
  loadBalancerIP: {{ $values.p2p.service.loadBalancerIP }}
  {{- end }}
  {{- if and $values.p2p $values.p2p.service $values.p2p.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml $values.p2p.service.loadBalancerSourceRanges | nindent 2 }}
  {{- end }}
  {{- if and $values.p2p $values.p2p.service $values.p2p.service.externalIPs }}
  externalIPs:
    {{- toYaml $values.p2p.service.externalIPs | nindent 2 }}
  {{- end }}
  publishNotReadyAddresses: {{ if (and $values.p2p $values.p2p.service) }}{{ default false $values.p2p.service.publishNotReadyAddresses }}{{ else }}{{ default false $values.service.publishNotReadyAddresses.p2p }}{{ end }}
  ports:
    - name: tcp-p2p-68
      port: {{ include "erigon.p2pPort" $values }}
      protocol: TCP
      targetPort: tcp-p2p-68
    - name: udp-p2p-68
      port: {{ include "erigon.p2pPort" $values }}
      protocol: UDP
      targetPort: udp-p2p-68
    - name: tcp-p2p-67
      port: {{ add (include "erigon.p2pPort" $values) 1 }}
      protocol: TCP
      targetPort: tcp-p2p-67
    - name: udp-p2p-67
      port: {{ add (include "erigon.p2pPort" $values) 1 }}
      protocol: UDP
      targetPort: udp-p2p-67
  selector:
    {{- include "erigon.selectorLabels" . | nindent 4 }}
    {{- $componentLabel | nindent 4 }}
{{- end }}
