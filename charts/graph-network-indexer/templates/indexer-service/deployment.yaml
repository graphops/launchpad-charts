{{- $values := $.Values.indexerService }}
{{- $componentName := "service" }}
{{- $componentLabel := include "graph-network-indexer.componentLabelFor" $componentName }}

{{- $configTemplate := .Values.indexerDefaults.configTemplate }}
{{- $configToml := print (tpl $configTemplate $) }}
{{/* We use a hash of the configuration to automate restarts of dependents */}}
{{- $graphNetworkConfigHash := $configToml | sha256sum }}
{{/* START Deployment */}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graph-network-indexer.fullname" . }}-{{ $componentName }}
  labels:
    {{- include "graph-network-indexer.labels" . | nindent 4 }}
    {{- $componentLabel | nindent 4 }}
spec:
  replicas: {{ $values.replicas }}
  selector:
    matchLabels:
      {{- include "graph-network-indexer.selectorLabels" . | nindent 6 }}
      {{- $componentLabel | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config.toml: {{ $graphNetworkConfigHash }}
      {{- with $values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "graph-network-indexer.selectorLabels" . | nindent 8 }}
        {{- $componentLabel | nindent 8 }}
    spec:
      {{- with $values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "graph-network-indexer.serviceAccountName" . }}
      {{- with $values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ $values.terminationGracePeriodSeconds | default "60" }}
      initContainers:
        - name: envsubst
          imagePullPolicy: IfNotPresent
          image: bhgedigital/envsubst
          command:
            - /bin/sh
            - -c
            - |
              set -ex;
              envsubst < /var/lib/indexer-rs-template/config.toml > /etc/indexer-rs/config.toml;
              cat /etc/indexer-rs/config.toml;
          env:
            {{- with (deepCopy $.Values.indexerDefaults.secretEnv | mustMerge $values.secretEnv) }}
            {{- range $key, $val := . }}
            - name: {{ $key | quote }}
              valueFrom:
                secretKeyRef:
                  name: {{ $val.secretName | quote }}
                  key: {{ $val.key | quote }}
                  optional: false
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: config-template
              mountPath: /var/lib/indexer-rs-template
            - name: config
              mountPath: /etc/indexer-rs
      containers:
        - name: {{ $componentName }}
          image: "{{ $values.image.repository }}:{{ $values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ $values.image.pullPolicy }}
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- if or $.Values.indexerDefaults.env $values.env }}
          {{- $mergedEnv := merge (deepCopy $.Values.indexerDefaults.env) $values.env }}
          {{- range $key, $val := ( omit $mergedEnv "INDEXER_SERVICE_DATABASE__POSTGRES_URL" ) }}
          {{- if not (kindIs "invalid" $val) }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if or $.Values.indexerDefaults.secretEnv $values.secretEnv }}
          {{- $mergedSecretEnv := merge (deepCopy (default dict $.Values.indexerDefaults.secretEnv)) (default dict $values.secretEnv) }}
          {{- range $key, $val := ( omit $mergedSecretEnv "INDEXER_SERVICE_DATABASE__POSTGRES_URL" ) }}
          {{- if and $val $val.secretName $val.key }}
            - name: {{ $key | quote }}
              valueFrom:
                secretKeyRef:
                  name: {{ $val.secretName | quote }}
                  key: {{ $val.key | quote }}
                  optional: false
          {{- end }}
          {{- end }}
          {{- end }}
            - name: INDEXER_SERVICE_DATABASE__POSTGRES_URL
              value: 'postgres://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@{{ index .Values.indexerDefaults.config "postgres-host" }}:{{ index .Values.indexerDefaults.config "postgres-port" }}/{{ index .Values.indexerDefaults.config "postgres-database" }}'
          command:
          - /usr/local/bin/service
          - --config=/etc/indexer-rs/config.toml
          {{- with $values.extraArgs }}
            {{- toYaml (. | default list) | nindent 12 }}
          {{- end }}
          ports:
            - name: http-queryapi
              containerPort: 7600
              protocol: TCP
            - name: http-metrics
              containerPort: 7300
              protocol: TCP
          volumeMounts:
          - name: config
            mountPath: "/etc/indexer-rs"
            readOnly: true
          readinessProbe:
            httpGet:
              port: http-queryapi
          {{- with $values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config-template
          configMap:
            name: {{ include "graph-network-indexer.fullname" . }}-config
        - name: config
          emptyDir: {}
      {{- with $values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or $values.affinity $values.affinityPresets.antiAffinityByHostname }}
      affinity:
      {{- with $values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $values.affinityPresets.antiAffinityByHostname }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - {{ $.Release.Name }}
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - {{ $componentName }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      {{- end }}
      {{- with $values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{/* END Deployment */}}