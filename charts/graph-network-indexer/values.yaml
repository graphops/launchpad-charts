# Default values for graph-network-indexer.
# This is a YAML-formatted file.

nameOverride: ""
fullnameOverride: ""

# -- Pull secrets required to fetch the Image
imagePullSecrets: []

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

prometheus:
  serviceMonitors:
    # -- Enable monitoring by creating `ServiceMonitor` CRDs ([prometheus-operator](https://github.com/prometheus-operator/prometheus-operator))
    enabled: false
    labels: {}
    interval:
    scrapeTimeout:
    relabelings: []
    metricRelabelings: []

grafana:
  # -- Enable creation of Grafana dashboards. [Grafana chart](https://github.com/grafana/helm-charts/tree/main/charts/grafana#grafana-helm-chart) must be configured to search this namespace, see `sidecar.dashboards.searchNamespace`
  dashboards: false
  # -- Must match `sidecar.dashboards.label` value for the [Grafana chart](https://github.com/grafana/helm-charts/tree/main/charts/grafana#grafana-helm-chart)
  dashboardsConfigMapLabel: grafana_dashboard
  # -- Must match `sidecar.dashboards.labelValue` value for the [Grafana chart](https://github.com/grafana/helm-charts/tree/main/charts/grafana#grafana-helm-chart)
  dashboardsConfigMapLabelValue: "1"

# -- Value defaults that apply to both indexer-agent and indexer-service
indexerDefaults:
  # -- Config to be supplied as CLI arguments, specified using YAML keys to allow overriding
  config:
    # -- (required) URL for a blockchain node that has the Graph Protocol contracts (e.g. Ethereum Mainnet, Goerli)
    ethereum: null
    # -- Name of the network that you have specified a node URL for in `ethereum`
    ethereum-network: "mainnet"
    # -- (required) Ethereum address of your Indexer
    indexer-address: null
    # -- (required) URL for your graph node query endpoint (probably a load balancer address)
    graph-node-query-endpoint: null
    # -- (required) URL for your graph node status endpoint (probably a load balancer address)
    graph-node-status-endpoint: null
    # -- (required) Hostname for your Postgres indexer metadata database
    postgres-host: null
    # -- Name of the Postgres database to use for indexer metadata
    postgres-database: indexer
    # -- Specify a plain text username to authenticate with Postgres
    postgres-username: null
    # -- (not recommended) Specify a plain text password to authenticate with Postgres. Instead, we recommend using a Kubernetes Secret and secretEnv to mount the value as an environment variable.
    postgres-password: null
    # -- Port that Postgres is available on
    postgres-port: 5432
    # -- (not recommended) Specify a plain text mnemonic for your operator account. Instead, we recommend using a Kubernetes Secret and secretEnv to mount the value as an environment variable.
    mnemonic: null
    # -- (required) An endpoint to query the network subgraph
    network-subgraph-endpoint: null

  configService:
  
    metrics-port: 7602

    subgraphs-network-syncing-interval-secs: 60

    subgraphs-network-recently-closed-allocation-buffer-secs: 100

    service-host-and-port: "0.0.0.0:7600"

    blockchain-chain-id: 421614

    subgraphs-escrow-syncing-interval-secs: 60

    subgraphs-escrow-query-url: null

    blockchain-receipts-verifier-address: null

    service-url-prefix: "/"

    service-serve-network-subgraph: false

    service-serve-escrow-subgraph: false

    service-tap-max-receipt-value-grt: "0.001"

    tap-max-amount-willing-to-lose-grt: "0.03"

    tap-rav-request-trigger-value-divisor: 3
    
    tap-rav-request-timestamp-buffer-secs: 60

    tap-rav-request-request-timeout-secs: 5

    tap-rav-request-max-receipts-per-request: 1000

    tap-sender-aggregator-endpoints: []


  configTemplate: |
      # WARNING:  This shows all the possible configuration options. Make sure you know what
      #           you are doing.
      #           Prefer starting with `minimal-config-example.toml`.
      #
      # All the optional values (missing from the minimal config) are set to the current
      # default values.
      # You will have to change *most* the values below to match your setup.
      #
      # Some of the config below are global graph network values, which you can find here:
      # https://github.com/graphprotocol/indexer/tree/main/docs/networks
      #
      # This configmap was constructed using flags under indexerDefaults.configService or indexerDefaults.config,
      # but all values can also be overwritten with environment variables.
      #
      # If you want to supply some or all of the configuration below using environment variables,
      # use the prefix "INDEXER_SERVICE" or "TAP_AGENT" for indexer-service or tap-agent, respectively,
      # followed by the name of the field, using double underscores "__" for nesting. Example:
      #
      #       INDEXER_SERVICE_SUBGRAPHS__NETWORK__QUERY_URL = [...]
      #
      #   For
      #
      #       [subgraphs.network]
      #       query_url = [...]

      [indexer]
      indexer_address = {{ index .Values.indexerDefaults.config "indexer-address" | quote }}
      # We are commenting this out because we are using the secretEnvs to construct the mnemonic and use INDEXER_MNEMONIC as the environment variable instead
      # operator_mnemonic = "your_mnemonic"

      # [database]
      # # The URL of the Postgres database used for the indexer components. The same database
      # # that is used by the `indexer-agent`. It is expected that `indexer-agent` will create
      # # the necessary tables.
      # We are commenting this out because we are using the secretEnvs to construct the postgres url and use INDEXER_SERVICE_DATABASE__POSTGRES_URL as the environment variable instead
      # postgres_url = "postgres://valid_username:valid_password@valid_postgres_host:5432/valid_postgres_database"

      [metrics]
      port = {{ index .Values.indexerDefaults.configService "metrics-port" }}

      [graph_node]
      query_url = {{ index .Values.indexerDefaults.config "graph-node-query-endpoint" | quote }}
      status_url = {{ index .Values.indexerDefaults.config "graph-node-status-endpoint" | quote }}

      [subgraphs.network]
      query_url = {{ index .Values.indexerDefaults.config "network-subgraph-endpoint" | quote }}
      syncing_interval_secs = {{ index .Values.indexerDefaults.configService "subgraphs-network-syncing-interval-secs" }}
      recently_closed_allocation_buffer_secs = {{ index .Values.indexerDefaults.configService "subgraphs-network-recently-closed-allocation-buffer-secs" }}

      [subgraphs.escrow]
      query_url = {{ index .Values.indexerDefaults.configService "subgraphs-escrow-query-url" | quote }}
      syncing_interval_secs = {{ index .Values.indexerDefaults.configService "subgraphs-escrow-syncing-interval-secs" }}

      [blockchain]
      chain_id = {{ index .Values.indexerDefaults.configService "blockchain-chain-id" }}
      receipts_verifier_address = {{ index .Values.indexerDefaults.configService "blockchain-receipts-verifier-address" | quote }}

      ##############################################
      # Specific configurations to indexer-service #
      ##############################################
      [service]
      host_and_port = {{ index .Values.indexerDefaults.configService "service-host-and-port" | quote }}
      url_prefix = {{ index .Values.indexerDefaults.configService "service-url-prefix" | quote }}
      serve_network_subgraph = {{ index .Values.indexerDefaults.configService "service-serve-network-subgraph" }}
      serve_escrow_subgraph = {{ index .Values.indexerDefaults.configService "service-serve-escrow-subgraph" }}

      [service.tap]
      max_receipt_value_grt = {{ index .Values.indexerDefaults.configService "service-tap-max-receipt-value-grt" }}

      ########################################
      # Specific configurations to tap-agent #
      ########################################
      [tap]
      max_amount_willing_to_lose_grt = {{ index .Values.indexerDefaults.configService "tap-max-amount-willing-to-lose-grt" }}

      [tap.rav_request]
      trigger_value_divisor = {{ index .Values.indexerDefaults.configService "tap-rav-request-trigger-value-divisor" }}
      timestamp_buffer_secs = {{ index .Values.indexerDefaults.configService "tap-rav-request-timestamp-buffer-secs" }}
      request_timeout_secs = {{ index .Values.indexerDefaults.configService "tap-rav-request-request-timeout-secs" }}
      max_receipts_per_request = {{ index .Values.indexerDefaults.configService "tap-rav-request-max-receipts-per-request" }}

      [tap.sender_aggregator_endpoints]
      {{- range $key, $value := index .Values.indexerDefaults.configService "tap-sender-aggregator-endpoints" }}
      {{ $key }} = {{ $value | quote }}
      {{- end }}


  secretEnv:
    POSTGRES_USERNAME:
      secretName: test-secret
      key: test
    POSTGRES_PASSWORD:
      secretName: test-secret
      key: test

  env: 
    {}


indexerAgent:
  # -- Image for indexer-agent
  image:
    repository: ghcr.io/graphprotocol/indexer-agent
    pullPolicy: IfNotPresent
    tag: "v0.21.4"

  # -- Config to be supplied as CLI arguments, specified using YAML keys to allow overriding
  config:
    # -- (required) URL for your graph-node admin API endpoint
    graph-node-admin-endpoint: null
    # -- (required) Public HTTPS URL of your indexer-service query endpoint
    public-indexer-url: null
    # -- (required) A command separated list of graph-node Node IDs to assign subgraphs to
    index-node-ids: null
    # -- (required) The gateway collect-receipts endpoint for getting vouchers
    collect-receipts-endpoint: null
    # -- (required) Base58 deployment hash (Qm...) for the Graph Network Subgraph
    network-subgraph-deployment: null
    # -- (required) Contract address of ERC20 used for DAI variable in cost models
    dai-contract: null
    # -- (optional) Query endpoint for syncing status of EBO and its contract state.
    epoch-subgraph-endpoint: null

  secretEnv: {}

  env: {}

  # -- Additional CLI arguments to pass to `indexer-agent`
  extraArgs: []

  # Increasing the grace termination period prevents Kubernetes
  # from killing the node process prematurely. Premature shutdown
  # can lead to data integrity issues
  # -- Amount of time to wait before force-killing the process
  terminationGracePeriodSeconds: 10

  # -- Annotations for the `Pod`
  podAnnotations: {}

  # -- Pod-wide security context
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 101337
    runAsGroup: 101337
    fsGroup: 101337

  service:
    topologyAwareRouting:
      enabled: false
    type: ClusterIP
    ports: # Valid keys are names of ports that are exposed by the Pod
      # -- Service Port to expose Indexer Management API on
      http-mgmtapi: 8000
      # -- Service Port to expose Metrics on
      http-metrics: 7300

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi

  nodeSelector: {}

  tolerations: []

  affinityPresets:
    # -- Configure anti-affinity rules to prevent multiple instances on the same host
    antiAffinityByHostname: true

  affinity: {}

indexerService:
  # -- Image for indexer-service
  image:
    repository: ghcr.io/graphprotocol/indexer-service-rs
    pullPolicy: IfNotPresent
    # -- Overrides the image tag
    # @default -- Chart.appVersion
    tag: ""

  # -- Number of replicas to run
  replicas: 1

  secretEnv: {}

  env: {}


  # -- Additional CLI arguments to pass to `indexer-service`
  extraArgs: []

  # Increasing the grace termination period prevents Kubernetes
  # from killing the node process prematurely. Premature shutdown
  # can lead to data integrity issues
  # -- Amount of time to wait before force-killing the process
  terminationGracePeriodSeconds: 10

  # -- Annotations for the `Pod`
  podAnnotations: {}

  # -- Pod-wide security context
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 101337
    runAsGroup: 101337
    fsGroup: 101337

  service:
    topologyAwareRouting:
      enabled: false
    type: ClusterIP
    ports: # Valid keys are names of ports that are exposed by the Pod
      # -- Service Port to expose Query API on
      http-queryapi: 7600
      # -- Service Port to expose Metrics on
      http-metrics: 7300

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi

  nodeSelector: {}

  tolerations: []

  affinityPresets:
    # -- Configure anti-affinity rules to prevent multiple instances on the same host
    antiAffinityByHostname: true

  affinity: {}


indexerTapAgent:
  # -- Image for indexer-tap-agent
  image:
    repository: ghcr.io/graphprotocol/indexer-tap-agent
    pullPolicy: IfNotPresent
    # -- Overrides the image tag
    # @default -- Chart.appVersion
    tag: ""

  # -- Number of replicas to run
  replicas: 1

  # secretEnv: 
  #   INDEXER_SERVICE_POSTGRES_USERNAME:
  #     secretName: 
  #     key:
  #   INDEXER_SERVICE_POSTGRES_PASSWORD:
  #     secretName: 
  #     key: 

  env: 
    INDEXER_SERVICE_POSTGRES_HOST: "pg-indexer-metadata"
    INDEXER_SERVICE_POSTGRES_PORT: 5432
    INDEXER_SERVICE_POSTGRES_DATABASE: "indexer"
    INDEXER_SERVICE_DATABASE: "postgresql://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"

  # -- Additional CLI arguments to pass to `indexer-service`
  extraArgs: []

  # Increasing the grace termination period prevents Kubernetes
  # from killing the node process prematurely. Premature shutdown
  # can lead to data integrity issues
  # -- Amount of time to wait before force-killing the process
  terminationGracePeriodSeconds: 10

  # -- Annotations for the `Pod`
  podAnnotations: {}

  # -- Pod-wide security context
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 101337
    runAsGroup: 101337
    fsGroup: 101337

  service:
    topologyAwareRouting:
      enabled: false
    type: ClusterIP
    ports: # Valid keys are names of ports that are exposed by the Pod
      # -- Service Port to expose Query API on
      http-queryapi: 7600
      # -- Service Port to expose Metrics on
      http-metrics: 7300

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi

  nodeSelector: {}

  tolerations: []

  affinityPresets:
    # -- Configure anti-affinity rules to prevent multiple instances on the same host
    antiAffinityByHostname: true

  affinity: {}

