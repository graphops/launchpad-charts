{{- if .Values.crds.create -}}
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: lokistacks.loki.grafana.com
  labels:
    {{- include "loki-operator.labels" . | nindent 4 }}
spec:
  group: loki.grafana.com
  names:
    categories:
    - logging
    kind: LokiStack
    listKind: LokiStackList
    plural: lokistacks
    singular: lokistack
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: LokiStack is the Schema for the lokistacks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LokiStackSpec defines the desired state of LokiStack
            properties:
              limits:
                description: Limits defines the limits to be applied to log stream
                  processing.
                properties:
                  global:
                    description: Global defines the limits to be applied globally across
                      the deployment.
                    properties:
                      ingestion:
                        description: Ingestion defines the limits to be applied to
                          ingestion rate.
                        properties:
                          ingestionBurstSize:
                            description: IngestionBurstSizeBytes defines the burst
                              size (bytes) to be applied to ingestion rate.
                            format: int64
                            type: integer
                          ingestionRate:
                            description: IngestionRateMB defines the ingestion rate
                              limit in MB per second.
                            format: int64
                            type: integer
                          maxGlobalStreamsPerTenant:
                            description: MaxGlobalStreamsPerTenant defines the maximum
                              number of active streams per tenant, across the cluster.
                            format: int64
                            type: integer
                          maxLabelNameLength:
                            description: MaxLabelNameLength defines the maximum number
                              of characters allowed for label names.
                            format: int64
                            type: integer
                          maxLabelNamesPerSeries:
                            description: MaxLabelNamesPerSeries defines the maximum
                              number of label names per series.
                            format: int64
                            type: integer
                          maxLabelValueLength:
                            description: MaxLabelValueLength defines the maximum number
                              of characters allowed for label values.
                            format: int64
                            type: integer
                        type: object
                      queries:
                        description: Queries defines the limits to be applied to log
                          queries.
                        properties:
                          maxChunksPerQuery:
                            description: MaxChunksPerQuery defines the maximum number
                              of chunks that can be fetched by a single query.
                            format: int64
                            type: integer
                          maxEntriesLimitPerQuery:
                            description: MaxEntriesLimitPerQuery defines the maximum
                              number of log entries that will be returned for a query.
                            format: int64
                            type: integer
                          maxQueryLookback:
                            description: MaxQueryLookback defines the maximum duration
                              for which logs can be queried.
                            type: string
                          maxQueryParallelism:
                            description: MaxQueryParallelism defines the maximum number
                              of queries that can be executed in parallel.
                            format: int64
                            type: integer
                          maxQuerySeries:
                            description: MaxQuerySeries defines the the maximum number
                              of series for which a query can fetch samples.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  perTenant:
                    description: PerTenant defines the limits to be applied to a tenant.
                    properties:
                      ingestion:
                        description: Ingestion defines the limits to be applied to
                          ingestion rate.
                        properties:
                          ingestionBurstSize:
                            description: IngestionBurstSizeBytes defines the burst
                              size (bytes) to be applied to ingestion rate.
                            format: int64
                            type: integer
                          ingestionRate:
                            description: IngestionRateMB defines the ingestion rate
                              limit in MB per second.
                            format: int64
                            type: integer
                          maxGlobalStreamsPerTenant:
                            description: MaxGlobalStreamsPerTenant defines the maximum
                              number of active streams per tenant, across the cluster.
                            format: int64
                            type: integer
                          maxLabelNameLength:
                            description: MaxLabelNameLength defines the maximum number
                              of characters allowed for label names.
                            format: int64
                            type: integer
                          maxLabelNamesPerSeries:
                            description: MaxLabelNamesPerSeries defines the maximum
                              number of label names per series.
                            format: int64
                            type: integer
                          maxLabelValueLength:
                            description: MaxLabelValueLength defines the maximum number
                              of characters allowed for label values.
                            format: int64
                            type: integer
                        type: object
                      queries:
                        description: Queries defines the limits to be applied to log
                          queries.
                        properties:
                          maxChunksPerQuery:
                            description: MaxChunksPerQuery defines the maximum number
                              of chunks that can be fetched by a single query.
                            format: int64
                            type: integer
                          maxEntriesLimitPerQuery:
                            description: MaxEntriesLimitPerQuery defines the maximum
                              number of log entries that will be returned for a query.
                            format: int64
                            type: integer
                          maxQueryLookback:
                            description: MaxQueryLookback defines the maximum duration
                              for which logs can be queried.
                            type: string
                          maxQueryParallelism:
                            description: MaxQueryParallelism defines the maximum number
                              of queries that can be executed in parallel.
                            format: int64
                            type: integer
                          maxQuerySeries:
                            description: MaxQuerySeries defines the the maximum number
                              of series for which a query can fetch samples.
                            format: int64
                            type: integer
                        type: object
                    type: object
                type: object
              managementState:
                description: ManagementState defines if the CR should be managed by
                  the operator or not. Default is managed.
                enum:
                - Managed
                - Unmanaged
                type: string
              replicationFactor:
                description: ReplicationFactor defines the replication factor for the
                  compactor, distributor, ingester, querier and ruler components.
                format: int32
                type: integer
              size:
                description: Size defines one of the support Loki deployment sizes.
                enum:
                - 1x.Small
                - 1x.Medium
                - 1x.Large
                type: string
              storage:
                description: Storage defines the spec for the object storage endpoint
                  to store logs.
                properties:
                  schemas:
                    description: Schemas defines the schemas configuration for the
                      object storage.
                    items:
                      description: ObjectStorageSchema defines the schema for the object
                        storage.
                      properties:
                        effectiveDate:
                          description: EffectiveDate defines the effective date of
                            the schema.
                          type: string
                        version:
                          description: Version defines the schema version.
                          type: string
                      required:
                      - effectiveDate
                      - version
                      type: object
                    type: array
                  secret:
                    description: Secret defines the secret containing the credentials
                      for the object storage.
                    properties:
                      name:
                        description: Name defines the name of the secret.
                        type: string
                      type:
                        description: Type defines the type of the object storage.
                        enum:
                        - azure
                        - gcs
                        - s3
                        - swift
                        type: string
                    required:
                    - name
                    - type
                    type: object
                required:
                - schemas
                - secret
                type: object
              storageClassName:
                description: StorageClassName defines the storage class name to be
                  used for PVCs created for the compactor, ingester and querier components.
                type: string
              tenants:
                description: Tenants defines the spec for LokiStack tenants.
                properties:
                  authentication:
                    description: Authentication defines the spec for tenant authentication.
                    items:
                      description: LokiStackTenantAuthentication defines the tenant
                        authentication spec.
                      properties:
                        oidc:
                          description: OIDC defines the spec for OIDC authentication.
                          properties:
                            clientID:
                              description: ClientID defines the client ID for OIDC
                                authentication.
                              type: string
                            clientSecret:
                              description: ClientSecret defines the client secret for
                                OIDC authentication.
                              properties:
                                key:
                                  description: Key defines the key in the secret.
                                  type: string
                                name:
                                  description: Name defines the name of the secret.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            groupClaim:
                              description: GroupClaim defines the claim to use for
                                mapping groups.
                              type: string
                            issuerURL:
                              description: IssuerURL defines the URL for the OIDC
                                issuer.
                              type: string
                            redirectURL:
                              description: RedirectURL defines the URL for OIDC redirection.
                              type: string
                            usernameClaim:
                              description: UsernameClaim defines the claim to use for
                                mapping usernames.
                              type: string
                          required:
                          - clientID
                          - clientSecret
                          - issuerURL
                          type: object
                        tenantName:
                          description: TenantName defines the name of the tenant.
                          type: string
                        tenantID:
                          description: TenantID defines the ID of the tenant.
                          type: string
                      required:
                      - tenantName
                      type: object
                    type: array
                  authorization:
                    description: Authorization defines the spec for tenant authorization.
                    properties:
                      opa:
                        description: OPA defines the spec for OPA authorization.
                        properties:
                          url:
                            description: URL defines the URL for the OPA server.
                            type: string
                        required:
                        - url
                        type: object
                      roles:
                        description: Roles defines the roles for tenant authorization.
                        items:
                          description: LokiStackTenantRole defines a role for tenant
                            authorization.
                          properties:
                            name:
                              description: Name defines the name of the role.
                              type: string
                            permissions:
                              description: Permissions defines the permissions for
                                the role.
                              items:
                                description: LokiStackTenantPermission defines a permission
                                  for tenant authorization.
                                properties:
                                  actions:
                                    description: Actions defines the actions for the
                                      permission.
                                    items:
                                      description: LokiStackTenantAction defines an
                                        action for tenant authorization.
                                      type: string
                                    type: array
                                  resources:
                                    description: Resources defines the resources for
                                      the permission.
                                    items:
                                      description: LokiStackTenantResource defines
                                        a resource for tenant authorization.
                                      type: string
                                    type: array
                                  tenants:
                                    description: Tenants defines the tenants for the
                                      permission.
                                    items:
                                      description: LokiStackTenantRef defines a tenant
                                        reference for tenant authorization.
                                      type: string
                                    type: array
                                required:
                                - actions
                                - resources
                                - tenants
                                type: object
                              type: array
                            subjects:
                              description: Subjects defines the subjects for the role.
                              items:
                                description: LokiStackTenantSubject defines a subject
                                  for tenant authorization.
                                properties:
                                  kind:
                                    description: Kind defines the kind of the subject.
                                    type: string
                                  name:
                                    description: Name defines the name of the subject.
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          - permissions
                          - subjects
                          type: object
                        type: array
                    type: object
                  mode:
                    description: Mode defines the mode for tenants.
                    enum:
                    - dynamic
                    - openshift-logging
                    - openshift-network
                    - static
                    type: string
                required:
                - mode
                type: object
            required:
            - size
            - storage
            - tenants
            type: object
          status:
            description: LokiStackStatus defines the observed state of LokiStack
            properties:
              components:
                description: Components defines the status of the LokiStack components.
                items:
                  description: LokiStackComponentStatus defines the status of a LokiStack
                    component.
                  properties:
                    conditions:
                      description: Conditions defines the current conditions of the
                        component.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct is
                          intended for direct use as an array at the field path .status.conditions.
                          \ For example, \n type FooStatus struct{ // Represents the
                          observations of a foo's current state. // Known .status.conditions.type
                          are: \"Available\", \"Progressing\", and \"Degraded\" //
                          +patchMergeKey=type // +patchStrategy=merge // +listType=map
                          // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the values
                              are considered a guaranteed API. The value should be
                              a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    name:
                      description: Name defines the name of the component.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              url:
                description: URL defines the URL for the LokiStack.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end }}
