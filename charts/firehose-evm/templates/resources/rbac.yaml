{{- define "defaults.Role" }}
{{- $roleKind := ternary "ClusterRole" "Role" .Pod.serviceAccount.rbac.clusterWide }}
{{- $bindingKind := ternary "ClusterRoleBinding" "RoleBinding" .Pod.serviceAccount.rbac.clusterWide }}
apiVersion: rbac.authorization.k8s.io/v1
kind: {{ $roleKind }}
metadata:
  name: {{ include "metadata.roleName" $ }}
  labels:
    {{- include "metadata.labels" $ | nindent 4 }}
rules:
  {{- .Pod.serviceAccount.rbac.rules | default list| toYaml | nindent 2 }}
{{- end }}

{{- define "defaults.RoleBinding" }}
{{- $roleKind := ternary "ClusterRole" "Role" .Pod.serviceAccount.rbac.clusterWide }}
{{- $bindingKind := ternary "ClusterRoleBinding" "RoleBinding" .Pod.serviceAccount.rbac.clusterWide }}
apiVersion: rbac.authorization.k8s.io/v1
kind: {{ $bindingKind }}
metadata:
  name: {{ include "metadata.roleName" $ }}
  labels:
    {{- include "metadata.labels" $ | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: {{ $roleKind }}
  name: {{ include "metadata.roleName" $ }}
subjects:
  - kind: ServiceAccount
    name: {{ include "metadata.serviceAccountName" $ }}
    namespace: {{ .Root.Release.Namespace }}
{{- end }}

{{- range $key, $componentValues := $.Values.firehosePods -}}
{{- $componentName := $key }}

{{- $templateCtx := include "resources.mergeValues" (dict "Root" $ "componentName" $key ) | fromYaml }}

{{- $values := deepCopy $templateCtx.Pod }}

{{- $defaultRole := include "defaults.Role" $templateCtx | fromYaml }}
{{- $defaultRoleBinding := include "defaults.RoleBinding" $templateCtx | fromYaml }}

{{- $templatedRole := get (list $defaultRole $templateCtx | include "utils.templateCollection" | fromYaml) "result" }}
{{- $templatedRoleBinding := get (list $defaultRoleBinding $templateCtx | include "utils.templateCollection" | fromYaml) "result" }}

{{- if and $values.serviceAccount.create $values.serviceAccount.rbac.create -}}
---
{{ $templatedRole | toYaml }}
---
{{ $templatedRoleBinding | toYaml }}
{{- end -}}
{{- end -}}
